
project frameworks/av/
diff --git a/media/libstagefright/MediaCodec.cpp b/media/libstagefright/MediaCodec.cpp
index 759e42da3..62e14f019 100644
--- a/media/libstagefright/MediaCodec.cpp
+++ b/media/libstagefright/MediaCodec.cpp
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-//#define LOG_NDEBUG 0
+#define LOG_NDEBUG 0
 #define LOG_TAG "MediaCodec"
 #include <inttypes.h>
 
@@ -551,7 +551,7 @@ void MediaCodec::PostReplyWithError(const sp<AReplyToken> &replyID, int32_t err)
 sp<CodecBase> MediaCodec::GetCodecBase(const AString &name, bool nameIsType) {
     // at this time only ACodec specifies a mime type.
     if (nameIsType || name.startsWithIgnoreCase("omx.")) {
-        return new ACodec;
+        return new ACodec; // create by registred name in xml file!!!!!
     } else if (name.startsWithIgnoreCase("android.filter.")) {
         return new MediaFilter;
     } else {
@@ -591,7 +591,7 @@ status_t MediaCodec::init(const AString &name, bool nameIsType, bool encoder) {
             mCodec = NULL;  // remove the codec.
             return NO_INIT; // if called from Java should raise IOException
         }
-        ssize_t codecIdx = mcl->findCodecByName(tmp.c_str());
+        ssize_t codecIdx = mcl->findCodecByName(tmp.c_str()); // really can find our codec?
         if (codecIdx >= 0) {
             const sp<MediaCodecInfo> info = mcl->getCodecInfo(codecIdx);
             Vector<AString> mimes;
diff --git a/media/libstagefright/MediaExtractor.cpp b/media/libstagefright/MediaExtractor.cpp
index c91c82b1b..813213a06 100644
--- a/media/libstagefright/MediaExtractor.cpp
+++ b/media/libstagefright/MediaExtractor.cpp
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-//#define LOG_NDEBUG 0
+#define LOG_NDEBUG 0
 #define LOG_TAG "MediaExtractor"
 #include <utils/Log.h>
 #include <inttypes.h>
@@ -173,6 +173,8 @@ sp<MediaExtractor> MediaExtractor::CreateFromService(
             || !strcasecmp(mime, "audio/mp4")) {
         ret = new MPEG4Extractor(source);
     } else if (!strcasecmp(mime, MEDIA_MIMETYPE_AUDIO_MPEG)) {
+	ALOGV("IGOR_DEBUG_MP3_EXTRACTOR_ENTER");
+        ALOGW("IGOR_DEBUG_MP3_EXTRACTOR_ENTER");
         ret = new MP3Extractor(source, meta);
     } else if (!strcasecmp(mime, MEDIA_MIMETYPE_AUDIO_AMR_NB)
             || !strcasecmp(mime, MEDIA_MIMETYPE_AUDIO_AMR_WB)) {
@@ -191,6 +193,10 @@ sp<MediaExtractor> MediaExtractor::CreateFromService(
         ret = new AACExtractor(source, meta);
     } else if (!strcasecmp(mime, MEDIA_MIMETYPE_CONTAINER_MPEG2PS)) {
         ret = new MPEG2PSExtractor(source);
+    } else if (!strcasecmp(mime, MEDIA_MIMETYPE_AUDIO_AC3)) {
+        ALOGV("IGOR_DEBUG_AC3_ENTER");
+        ALOGW("IGOR_DEBUG_AC3_ENTER");
+        ret = new MPEG2PSExtractor(source);
     } else if (!strcasecmp(mime, MEDIA_MIMETYPE_AUDIO_MIDI)) {
         ret = new MidiExtractor(source);
     }
diff --git a/media/libstagefright/omx/SoftOMXPlugin.cpp b/media/libstagefright/omx/SoftOMXPlugin.cpp
index 4946ada54..5b1b8139c 100644
--- a/media/libstagefright/omx/SoftOMXPlugin.cpp
+++ b/media/libstagefright/omx/SoftOMXPlugin.cpp
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-//#define LOG_NDEBUG 0
+#define LOG_NDEBUG 0
 #define LOG_TAG "SoftOMXPlugin"
 #include <utils/Log.h>
 
@@ -34,6 +34,7 @@ static const struct {
     const char *mRole;
 
 } kComponents[] = {
+    { "OMX.igor.ac3.decoder", "ac3dec", "audio_decoder.ac3" }, // HHHEEERREE
     { "OMX.google.aac.decoder", "aacdec", "audio_decoder.aac" },
     { "OMX.google.aac.encoder", "aacenc", "audio_encoder.aac" },
     { "OMX.google.amrnb.decoder", "amrdec", "audio_decoder.amrnb" },
